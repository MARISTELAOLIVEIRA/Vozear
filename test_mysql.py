#!/usr/bin/env python3
"""
Script para testar conectividade MySQL no Azure
"""

import os
from dotenv import load_dotenv
import pymysql

def test_mysql_connection():
    print("=== TESTE DE CONECTIVIDADE MYSQL AZURE ===")
    
    load_dotenv()
    
    # Tentar connection string autom√°tica primeiro (MySQL in App)
    mysql_conn_str = os.environ.get('MYSQLCONNSTR_defaultConnection')
    if mysql_conn_str:
        print("üîç MySQL in App detectado!")
        print(f"Connection String: {mysql_conn_str[:50]}...")
        # Parse connection string seria necess√°rio aqui
        return test_mysql_in_app(mysql_conn_str)
    
    # Tentar vari√°veis manuais
    host = os.environ.get('MYSQL_HOST')
    user = os.environ.get('MYSQL_USER')
    password = os.environ.get('MYSQL_PASSWORD')
    database = os.environ.get('MYSQL_DATABASE')
    
    print(f"Host: {host}")
    print(f"User: {user}")
    print(f"Database: {database}")
    print(f"Password presente: {'Sim' if password else 'N√£o'}")
    
    if not all([host, user, password, database]):
        print("‚ùå ERRO: Credenciais MySQL n√£o encontradas!")
        print("\nüí° Configure as vari√°veis:")
        print("MYSQL_HOST=<host>")
        print("MYSQL_USER=<usuario>")
        print("MYSQL_PASSWORD=<senha>")
        print("MYSQL_DATABASE=<banco>")
        return False
    
    return test_mysql_manual(host, user, password, database)

def test_mysql_manual(host, user, password, database):
    try:
        print(f"\nüì° Conectando em {host}...")
        
        connection = pymysql.connect(
            host=host,
            user=user,
            password=password,
            database=database,
            charset='utf8mb4',
            connect_timeout=10
        )
        
        print("‚úÖ CONEX√ÉO MYSQL ESTABELECIDA!")
        
        # Testar opera√ß√µes b√°sicas
        with connection.cursor() as cursor:
            cursor.execute("SELECT VERSION()")
            version = cursor.fetchone()
            print(f"üìä Vers√£o MySQL: {version[0]}")
            
            cursor.execute("SELECT DATABASE()")
            current_db = cursor.fetchone()
            print(f"üóÑÔ∏è Banco atual: {current_db[0]}")
            
            # Testar cria√ß√£o de tabela
            cursor.execute("""
                CREATE TABLE IF NOT EXISTS test_vozear (
                    id INT AUTO_INCREMENT PRIMARY KEY,
                    nome VARCHAR(100),
                    teste DATETIME DEFAULT CURRENT_TIMESTAMP
                )
            """)
            print("‚úÖ Teste de cria√ß√£o de tabela: OK")
            
            # Testar inser√ß√£o
            cursor.execute("INSERT INTO test_vozear (nome) VALUES (%s)", ("Teste Vozear",))
            connection.commit()
            print("‚úÖ Teste de inser√ß√£o: OK")
            
            # Testar sele√ß√£o
            cursor.execute("SELECT COUNT(*) FROM test_vozear")
            count = cursor.fetchone()
            print(f"‚úÖ Teste de consulta: {count[0]} registros")
            
            # Limpar teste
            cursor.execute("DROP TABLE test_vozear")
            connection.commit()
            print("‚úÖ Limpeza: OK")
        
        connection.close()
        return True
        
    except Exception as e:
        print(f"‚ùå ERRO na conex√£o MySQL: {e}")
        print(f"üîç Tipo do erro: {type(e)}")
        
        error_str = str(e).lower()
        if "access denied" in error_str:
            print("üîë Problema: Usu√°rio/senha incorretos")
        elif "unknown host" in error_str:
            print("üåê Problema: Host n√£o encontrado")
        elif "timeout" in error_str:
            print("‚è∞ Problema: Timeout de conex√£o")
        elif "unknown database" in error_str:
            print("üóÑÔ∏è Problema: Banco de dados n√£o existe")
        else:
            print("‚ùì Problema: Erro desconhecido")
            
        return False

def test_mysql_in_app(conn_str):
    print("üîß Fun√ß√£o para MySQL in App ainda n√£o implementada")
    print("Use vari√°veis manuais por enquanto")
    return False

if __name__ == "__main__":
    success = test_mysql_connection()
    
    if success:
        print("\nüéâ Teste MySQL conclu√≠do com SUCESSO!")
        print("‚úÖ O banco MySQL est√° funcionando corretamente")
        print("\nüöÄ Pr√≥ximo passo: fazer deploy da aplica√ß√£o")
    else:
        print("\nüí• Teste MySQL FALHOU!")
        print("‚ùå Verifique as configura√ß√µes do MySQL")
        print("\nüìñ Consulte MYSQL_SETUP.md para instru√ß√µes")
